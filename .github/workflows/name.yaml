name: Test and Build

on:
  push:
    branches:
      - master

jobs:
  test:
    name: Test Application
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]
    steps:
      # Step: Checkout code
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step: Setup Python
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      # # Step: Cache dependencies
      # - name: Cache dependencies
      #   uses: actions/cache@v4
      #   id: cache-dependencies
      #   with:
      #     path: ~/.cache/pip
      #     key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('requirements*.txt', 'setup.py') }}
      #     restore-keys: |
      #       ${{ runner.os }}-pip-${{ matrix.python-version }}-
      #       ${{ runner.os }}-pip-

      # Step: Install dependencies
      - name: Install dependencies
        run: |
          if [ -f "requirements.txt" ]; then
            pip install -r requirements.txt
          else
            echo "⚠️ requirements.txt not found, skipping dependency installation."
          fi

      # Step: Install test dependencies
      - name: Install test dependencies
        run: |
          if [ -f "requirements-test.txt" ]; then
            pip install -r requirements-test.txt
          else
            echo "⚠️ requirements-test.txt not found, using only primary dependencies."
          fi

      # Step: Run tests
      - name: Run pytest
        run: |
          if [ -d "tests/" ]; then
            python -m pytest --cov || echo "⚠️ Tests failed but continuing for analysis."
          else
            echo "⚠️ No tests directory found, skipping tests."
          fi

      # Step: Upload coverage report
      - name: Upload coverage results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: .coverage,*coverage.xml
